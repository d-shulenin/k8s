apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.name }}-deployment
spec:
  replicas: {{ .Values.backend.replicas }}
  selector:
    matchLabels: 
      components: {{ .Values.backend.name }}
  template:
    metadata:
      labels: 
        components: {{ .Values.backend.name }}
    spec:
      containers:
        - name: {{ .Values.backend.name }}-container
          image: "{{ .Values.backend.image }}:{{ .Values.backend.imageVersion }}"
          resources:
            limits: {{ .Values.backend.limits | toYaml | nindent 14 }}
          ports:
            - containerPort: {{ .Values.backend.port }}
          env:
            {{- range .Values.backend.envs  }}
            {{- $data := dict "name" $.Values.backend.name "env" . }}
            {{- include "env.template" $data | indent 12}}
            {{- end}}
          volumeMounts:
            - name: test
              mountPath: /etc/test
              readOnly: true
          livenessProbe:
            exec:
              command:
                - curl
                - --fail
                - http://localhost:3000/api
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 2
          startupProbe:
            exec:
              command:
                - curl
                - --fail
                - http://localhost:3000/api
            periodSeconds: 10
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - curl
                - --fail
                - http://localhost:3000/api
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 2
      volumes:
        - name: test
          configMap:
            name: demo-config
